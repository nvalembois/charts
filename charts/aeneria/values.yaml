# ---
# https://github.com/bjw-s/helm-charts/blob/main/charts/library/common/values.yaml


front:
  image: 
    repository: ghcr.io/nvalembois/aeneria-front
    tag: 2.1.1-nginx1.25.4-alpine
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 10m
      memory: 64Mi
app:
  image: 
    repository: ghcr.io/nvalembois/aeneria-app
    tag: 2.1.1-php8.3.3-alpine
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 10m
      memory: 64Mi
  env: {}
    # APP_ENV: prod
    # AENERIA_USER_MAX_PLACES: -1
    # AENERIA_USER_CAN_SHARE_PLACE: 1
    # AENERIA_USER_CAN_FETCH: 1
    # AENERIA_USER_CAN_EXPORT: 1
    # AENERIA_USER_CAN_IMPORT: 1
    # AENERIA_PLACE_CAN_BE_PUBLIC: 1
    # AENERIA_DEMO_MODE: 0
    # AENERIA_WELCOME_MESSAGE: '<h1>Bienvenue sur Ã¦neria</h1>'
    # AENERIA_PROXY_URL: https://proxy.aeneria.com
    # AENERIA_PROXY_FOR_ENEDIS: ''
    # AENERIA_PROXY_FOR_GRDF: ''
    # ENEDIS_CLIENT_ID: ''
    # ENEDIS_CLIENT_SECRET: ''
    # ENEDIS_REDIRECT_URI: ''
    # ENEDIS_ENDPOINT_AUTH: https://mon-compte-particulier.enedis.fr
    # ENEDIS_ENDPOINT_TOKEN: https://ext.prod.api.enedis.fr
    # ENEDIS_ENDPOINT_DATA: https://ext.prod.api.enedis.fr
    # GRDF_CLIENT_ID: ''
    # GRDF_CLIENT_SECRET: ''
    # GRDF_REDIRECT_URI: ''
    # GRDF_ENDPOINT_AUTH: https://sofit-sso-oidc.grdf.fr
    # GRDF_ENDPOINT_DATA: https://api.grdf.fr
  secret:
    # type can be secret or sealedSecret
    type: secret
    app: mustbechanged
    extraValues: {}

db:
  type: cnpg
  database: aeneris
  username: aeneris
  size: 2Gi
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: "node-role.kubernetes.io/storage"
            operator: In
            values:
            - "true"

extraPodOptions: {}
affinity: {}

ingress:
  enabled: true
  host: aeneris.local

# -- Configure the networkPolicies for the chart here.
# Additional networkPolicies can be added by adding a dictionary key similar to the 'main' networkPolicy.
# @default -- See below
networkpolicies:
  enabled: true
  # Set Allowed Ingress Selectors to restrict access to front
  frontIngressAllowedSelectors: []
  # - podSelector:
  #     matchLabels:
  #       app.kubernetes.io/component: envoy
  #       app.kubernetes.io/name: contour
  #   namespaceSelector:
  #     matchLabels:
  #       kubernetes.io/metadata.name: kube-contour
  frontIngressExtraRules: []
  dbIngressExtraRules: []
  # - from:
  #   - namespaceSelector:
  #       matchLabels:
  #         kubernetes.io/metadata.name: "kube-postgresql-cnpg"
  #     podSelector:
  #       matchLabels:
  #         app.kubernetes.io/instance: "postgresql-cnpg"
  #         app.kubernetes.io/name: "cloudnative-pg"
  #   ports:
  #   - protocol: TCP
  #     port: 8000
