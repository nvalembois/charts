name: Helm test chart projects with all projects

on:
  pull_request:
    paths:
    - 'charts/**'  # Déclencher uniquement si un fichier projets.yaml est modifié

env:
  CHART_DIR: ./charts  # Variable d'environnement pour le répertoire
      
jobs:
  changed-charts:
    name: Get changed charts
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.changed-charts.outputs.all_changed_files }}
    steps:
    # Checkout le code du repository
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - name: Get charts changed
      id: changed-charts
      uses: tj-actions/changed-files@v45.0.3
      with:
        dir_names: true
        dir_names_max_depth: 2
        files: 'charts/**'
        matrix: true
  
  test-chart:
    name: Test changed charts
    runs-on: ubuntu-latest
    needs: [changed-charts]
    strategy:
      matrix: 
        files: ${{ fromJSON(needs.changed-charts.outputs.matrix) }}
      max-parallel: 4
      fail-fast: false
    steps:
    # Checkout le code du repository
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
    # Installer Helm
    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
    # Valider le Chart (Lint)
    - name: Helm lint
      run: |
        echo "Processing ${{ matrix.files }}"
        helm lint "${{ matrix.files }}"

  test-chart-deploy:
    name: Test changed charts in kind
    runs-on: ubuntu-latest
    needs: [changed-charts]
    steps:
    # Checkout le code du repository
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
    # Installer Helm
    - name: Install Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
    # Tester l'installation en utilisant Kind (Kubernetes in Docker)
    - name: Set up KinD cluster
      uses: helm/kind-action@v1.10.0
    # Installer le Chart
    - name: Install Chart on KinD
      run: |
        echo "matrix: ${{ needs.changed-charts.outputs.matrix }}"
        echo "fromJSON: ${{ fromJSON(needs.changed-charts.outputs.matrix) }}"

        for chart in ${{ fromJSON(needs.changed-charts.outputs.matrix) }}
        do
          echo "Processing $chart"
          pushd "$chart"
          if [[ -d ci/crds ]]; then
            for crd in ci/crds/*.yaml; do
              echo " apply $crd"
              helm apply -f "$crd"
            done
          fi
          helm install "$(dirname "$chart")" . -f values.yaml --wait
        done
