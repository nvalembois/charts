name: Helm test chart projects with all projects

on:
  pull_request:
    paths:
    - 'charts/**'  # Déclencher uniquement si un fichier projets.yaml est modifié

env:
  CHART_DIR: ./charts  # Variable d'environnement pour le répertoire
      
jobs:
  changed-charts:
    name: Get changed charts
    runs-on: ubuntu-latest
    outputs:
      list: ${{ steps.changed-charts.outputs.all_changed_files }}
    steps:
    # Checkout le code du repository
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
    - name: Get charts changed
      id: changed-charts
      uses: tj-actions/changed-files@v45.0.3
      with:
        dir_names: true
        dir_names_max_depth: 2
        files: 'charts/**'
  
  test-chart:
    name: Test changed charts
    runs-on: ubuntu-latest
    needs: [changed-charts]
    steps:
    # Checkout le code du repository
    - name: Checkout repository
      uses: actions/checkout@v4
      timeout-minutes: 5
      with:
        fetch-depth: 1
    # Installer Helm
    - name: Install Helm
      timeout-minutes: 5
      run: |
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
    # Valider le Chart (Lint)
    - name: Helm lint
      timeout-minutes: 5
      run: |
        echo "list: ${{ needs.changed-charts.outputs.list }}"
        for chart in ${{ needs.changed-charts.outputs.list }}
        do
          echo "Processing $chart"
          helm lint "$chart"
        done
    # Tester l'installation en utilisant Kind (Kubernetes in Docker)
    - name: Set up KinD cluster
      timeout-minutes: 10
      uses: helm/kind-action@v1.10.0
    # Installer le Chart
    - name: Install Chart on KinD
      timeout-minutes: 5
      run: |
        for chart in ${{ needs.changed-charts.outputs.list }}
        do
          echo "Processing $chart"
          pushd "$chart"
          if [[ -d ci/crds ]]; then
            for crd in ci/crds/*.yaml; do
              echo " apply $crd"
              kubectl apply -f "$crd"
            done
          fi
          helm install "$(basename "$chart")" . -f values.yaml --wait
          popd
        done
